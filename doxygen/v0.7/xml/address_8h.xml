<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="address_8h" kind="file" language="C++">
    <compoundname>address.h</compoundname>
    <includes local="no">inttypes.h</includes>
    <includes local="no">sys/types.h</includes>
    <includes local="no">avahi-common/cdecl.h</includes>
    <includedby refid="client_8h" local="no">avahi-client/client.h</includedby>
    <includedby refid="publish_8h" local="no">avahi-client/publish.h</includedby>
    <includedby refid="ga-enums_8h" local="no">avahi-gobject/ga-enums.h</includedby>
    <includedby refid="lookup_8h" local="no">avahi-client/lookup.h</includedby>
    <includedby refid="ga-service-resolver_8h" local="no">avahi-gobject/ga-service-resolver.h</includedby>
    <incdepgraph>
      <node id="55">
        <label>avahi-common/cdecl.h</label>
      </node>
      <node id="52">
        <label>avahi-common/address.h</label>
        <link refid="address_8h"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>sys/types.h</label>
      </node>
      <node id="53">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="63">
        <label>avahi-client/publish.h</label>
        <link refid="publish_8h"/>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>avahi-gobject/ga-service-browser.h</label>
        <link refid="ga-service-browser_8h"/>
      </node>
      <node id="58">
        <label>avahi-gobject/ga-client.h</label>
        <link refid="ga-client_8h"/>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>avahi-client/client.h</label>
        <link refid="client_8h"/>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>avahi-client/lookup.h</label>
        <link refid="lookup_8h"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>avahi-common/address.h</label>
        <link refid="address_8h"/>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>avahi-gobject/ga-enums.h</label>
        <link refid="ga-enums_8h"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>avahi-gobject/ga-entry-group.h</label>
        <link refid="ga-entry-group_8h"/>
      </node>
      <node id="62">
        <label>avahi-gobject/ga-service-resolver.h</label>
        <link refid="ga-service-resolver_8h"/>
      </node>
      <node id="60">
        <label>avahi-gobject/ga-record-browser.h</label>
        <link refid="ga-record-browser_8h"/>
      </node>
      <node id="65">
        <label>avahi-ui/avahi-ui.h</label>
        <link refid="avahi-ui_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_avahi_i_pv4_address" prot="public">AvahiIPv4Address</innerclass>
    <innerclass refid="struct_avahi_i_pv6_address" prot="public">AvahiIPv6Address</innerclass>
    <innerclass refid="struct_avahi_address" prot="public">AvahiAddress</innerclass>
      <sectiondef kind="user-defined">
      <header>Comparison</header>
      <memberdef kind="function" id="address_8h_1a27ce538894132c87a7d4e4b6c4608275" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int avahi_address_cmp</definition>
        <argsstring>(const AvahiAddress *a, const AvahiAddress *b)</argsstring>
        <name>avahi_address_cmp</name>
        <param>
          <type>const <ref refid="struct_avahi_address" kindref="compound">AvahiAddress</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="struct_avahi_address" kindref="compound">AvahiAddress</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Compare two addresses. </para>        </briefdescription>
        <detaileddescription>
<para>Returns 0 when equal, a negative value when a &lt; b, a positive value when a &gt; b. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="avahi-common/address.h" line="83" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>String conversion</header>
      <memberdef kind="function" id="address_8h_1adb9715709be6f8ef6a09899d17664185" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* avahi_address_snprint</definition>
        <argsstring>(char *ret_s, size_t length, const AvahiAddress *a)</argsstring>
        <name>avahi_address_snprint</name>
        <param>
          <type>char *</type>
          <declname>ret_s</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>const <ref refid="struct_avahi_address" kindref="compound">AvahiAddress</ref> *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Convert the specified address *a to a human readable character string, use AVAHI_ADDRESS_STR_MAX to allocate an array of the right size. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="avahi-common/address.h" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="address_8h_1a15ffb3f79239778d525f0f22b1cc0a75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_avahi_address" kindref="compound">AvahiAddress</ref> *</type>
        <definition>AvahiAddress* avahi_address_parse</definition>
        <argsstring>(const char *s, AvahiProtocol af, AvahiAddress *ret_addr)</argsstring>
        <name>avahi_address_parse</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="address_8h_1a5342ada86ff1566a7fc6e855b3d46c3d" kindref="member">AvahiProtocol</ref></type>
          <declname>af</declname>
        </param>
        <param>
          <type><ref refid="struct_avahi_address" kindref="compound">AvahiAddress</ref> *</type>
          <declname>ret_addr</declname>
        </param>
        <briefdescription>
<para>Convert the specified human readable character string to an address structure. </para>        </briefdescription>
        <detaileddescription>
<para>Set af to AVAHI_UNSPEC for automatic address family detection. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="avahi-common/address.h" line="95" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Protocol/address family handling</header>
      <memberdef kind="function" id="address_8h_1a82b828e82335edbfeff2dc15a85dc262" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int avahi_proto_to_af</definition>
        <argsstring>(AvahiProtocol proto)</argsstring>
        <name>avahi_proto_to_af</name>
        <param>
          <type><ref refid="address_8h_1a5342ada86ff1566a7fc6e855b3d46c3d" kindref="member">AvahiProtocol</ref></type>
          <declname>proto</declname>
        </param>
        <briefdescription>
<para>Map AVAHI_PROTO_xxx constants to Unix AF_xxx constants. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="avahi-common/address.h" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="address_8h_1a46ba7321e7db12be8afc1d09ecf1ec93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="address_8h_1a5342ada86ff1566a7fc6e855b3d46c3d" kindref="member">AvahiProtocol</ref></type>
        <definition>AvahiProtocol avahi_af_to_proto</definition>
        <argsstring>(int af)</argsstring>
        <name>avahi_af_to_proto</name>
        <param>
          <type>int</type>
          <declname>af</declname>
        </param>
        <briefdescription>
<para>Map Unix AF_xxx constants to AVAHI_PROTO_xxx constants. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="avahi-common/address.h" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="address_8h_1aa1d93d520cf16b13e087d92fd1f4d596" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* avahi_proto_to_string</definition>
        <argsstring>(AvahiProtocol proto)</argsstring>
        <name>avahi_proto_to_string</name>
        <param>
          <type><ref refid="address_8h_1a5342ada86ff1566a7fc6e855b3d46c3d" kindref="member">AvahiProtocol</ref></type>
          <declname>proto</declname>
        </param>
        <briefdescription>
<para>Return a textual representation of the specified protocol number. </para>        </briefdescription>
        <detaileddescription>
<para>i.e. &quot;IPv4&quot;, &quot;IPv6&quot; or &quot;UNSPEC&quot; </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="avahi-common/address.h" line="113" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="address_8h_1a30245a7d8dabf1e655e0282e5d427dac" prot="public" static="no">
        <name>AVAHI_ADDRESS_STR_MAX</name>
        <initializer>40 /* IPv6 Max = 4*8 + 7 + 1 for NUL */</initializer>
        <briefdescription>
<para>Maximum size of an address in string form. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="avahi-common/address.h" line="51" column="9" bodyfile="avahi-common/address.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="address_8h_1afb6cc0560bd01e8eb9bce3622536ef4b" prot="public" static="no">
        <name>AVAHI_IF_VALID</name>
        <param><defname>ifindex</defname></param>
        <initializer>(((ifindex) &gt;= 0) || ((ifindex) == <ref refid="address_8h_1adf764cbdea00d65edcd07bb9953ad2b7a9cefc02b2cc49f5a4c8effb3f610cca6" kindref="member">AVAHI_IF_UNSPEC</ref>))</initializer>
        <briefdescription>
<para>Return TRUE if the specified interface index is valid. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="avahi-common/address.h" line="54" column="9" bodyfile="avahi-common/address.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="address_8h_1abac21482950f1f3098af40ce04bf4e30" prot="public" static="no">
        <name>AVAHI_PROTO_VALID</name>
        <param><defname>protocol</defname></param>
        <initializer>(((protocol) == <ref refid="address_8h_1a06fc87d81c62e9abb8790b6e5713c55ba4f19fb8b322772bf535c2e10e19e1474" kindref="member">AVAHI_PROTO_INET</ref>) || ((protocol) == <ref refid="address_8h_1a06fc87d81c62e9abb8790b6e5713c55ba6b73d7a5fe00b8d3ba105932ab83cc5b" kindref="member">AVAHI_PROTO_INET6</ref>) || ((protocol) == <ref refid="address_8h_1a06fc87d81c62e9abb8790b6e5713c55ba6c1837afa356a983f188e35911dc0d84" kindref="member">AVAHI_PROTO_UNSPEC</ref>))</initializer>
        <briefdescription>
<para>Return TRUE if the specified protocol is valid. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="avahi-common/address.h" line="57" column="9" bodyfile="avahi-common/address.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="address_8h_1a06fc87d81c62e9abb8790b6e5713c55b" prot="public" static="no">
        <name>@0</name>
        <enumvalue id="address_8h_1a06fc87d81c62e9abb8790b6e5713c55ba4f19fb8b322772bf535c2e10e19e1474" prot="public">
          <name>AVAHI_PROTO_INET</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>IPv4. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="address_8h_1a06fc87d81c62e9abb8790b6e5713c55ba6b73d7a5fe00b8d3ba105932ab83cc5b" prot="public">
          <name>AVAHI_PROTO_INET6</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>IPv6. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="address_8h_1a06fc87d81c62e9abb8790b6e5713c55ba6c1837afa356a983f188e35911dc0d84" prot="public">
          <name>AVAHI_PROTO_UNSPEC</name>
          <initializer>= -1</initializer>
          <briefdescription>
<para>Unspecified/all protocol(s) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Values for AvahiProtocol. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="avahi-common/address.h" line="39" column="1" bodyfile="avahi-common/address.h" bodystart="39" bodyend="43"/>
      </memberdef>
      <memberdef kind="enum" id="address_8h_1adf764cbdea00d65edcd07bb9953ad2b7" prot="public" static="no">
        <name>@1</name>
        <enumvalue id="address_8h_1adf764cbdea00d65edcd07bb9953ad2b7a9cefc02b2cc49f5a4c8effb3f610cca6" prot="public">
          <name>AVAHI_IF_UNSPEC</name>
          <initializer>= -1</initializer>
          <briefdescription>
<para>Unspecified/all interface(s) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Special values for AvahiIfIndex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="avahi-common/address.h" line="46" column="1" bodyfile="avahi-common/address.h" bodystart="46" bodyend="48"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="address_8h_1a5342ada86ff1566a7fc6e855b3d46c3d" prot="public" static="no">
        <type>int</type>
        <definition>typedef int AvahiProtocol</definition>
        <argsstring></argsstring>
        <name>AvahiProtocol</name>
        <briefdescription>
<para>Protocol family specification, takes the values AVAHI_PROTO_INET, AVAHI_PROTO_INET6, AVAHI_PROTO_UNSPEC. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="avahi-common/address.h" line="33" column="1" bodyfile="avahi-common/address.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="address_8h_1a2fda397a8f430cb537e37bbca0afb535" prot="public" static="no">
        <type>int</type>
        <definition>typedef int AvahiIfIndex</definition>
        <argsstring></argsstring>
        <name>AvahiIfIndex</name>
        <briefdescription>
<para>Numeric network interface index. </para>        </briefdescription>
        <detaileddescription>
<para>Takes OS dependent values and the special constant AVAHI_IF_UNSPEC </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="avahi-common/address.h" line="36" column="1" bodyfile="avahi-common/address.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="address_8h_1a242754110a2e32511f557e4eec616a41" prot="public" static="no">
        <type>struct <ref refid="struct_avahi_i_pv4_address" kindref="compound">AvahiIPv4Address</ref></type>
        <definition>typedef struct AvahiIPv4Address  AvahiIPv4Address</definition>
        <argsstring></argsstring>
        <name>AvahiIPv4Address</name>
        <briefdescription>
<para>An IPv4 address. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="avahi-common/address.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="address_8h_1a3d03a955583d839cce86e70b29e3568d" prot="public" static="no">
        <type>struct <ref refid="struct_avahi_i_pv6_address" kindref="compound">AvahiIPv6Address</ref></type>
        <definition>typedef struct AvahiIPv6Address  AvahiIPv6Address</definition>
        <argsstring></argsstring>
        <name>AvahiIPv6Address</name>
        <briefdescription>
<para>An IPv6 address. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="avahi-common/address.h" line="67" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="address_8h_1a4797171b7d528538456fa3c68ebd430d" prot="public" static="no">
        <type>struct <ref refid="struct_avahi_address" kindref="compound">AvahiAddress</ref></type>
        <definition>typedef struct AvahiAddress  AvahiAddress</definition>
        <argsstring></argsstring>
        <name>AvahiAddress</name>
        <briefdescription>
<para>Protocol (address family) independent address structure. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="avahi-common/address.h" line="78" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Definitions and functions to manipulate IP addresses. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>fooaddresshfoo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>fooaddresshfoo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/***</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>avahi.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>avahi<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>as</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2.1<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/>avahi<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/>but<sp/>WITHOUT</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of<sp/>MERCHANTABILITY</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/>See<sp/>the<sp/>GNU<sp/>Lesser<sp/>General</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"></highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/>License<sp/>along<sp/>with<sp/>avahi;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place,<sp/>Suite<sp/>330,<sp/>Boston,<sp/>MA<sp/>02111-1307</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/>USA.</highlight></codeline>
<codeline lineno="21"><highlight class="comment">***/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor">#include<sp/>&lt;inttypes.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;avahi-common/cdecl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal">AVAHI_C_DECL_BEGIN</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="address_8h_1a5342ada86ff1566a7fc6e855b3d46c3d" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="address_8h_1a5342ada86ff1566a7fc6e855b3d46c3d" kindref="member">AvahiProtocol</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="address_8h_1a2fda397a8f430cb537e37bbca0afb535" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="address_8h_1a2fda397a8f430cb537e37bbca0afb535" kindref="member">AvahiIfIndex</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="40" refid="address_8h_1a06fc87d81c62e9abb8790b6e5713c55ba4f19fb8b322772bf535c2e10e19e1474" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="address_8h_1a06fc87d81c62e9abb8790b6e5713c55ba4f19fb8b322772bf535c2e10e19e1474" kindref="member">AVAHI_PROTO_INET</ref><sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="41" refid="address_8h_1a06fc87d81c62e9abb8790b6e5713c55ba6b73d7a5fe00b8d3ba105932ab83cc5b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="address_8h_1a06fc87d81c62e9abb8790b6e5713c55ba6b73d7a5fe00b8d3ba105932ab83cc5b" kindref="member">AVAHI_PROTO_INET6</ref><sp/>=<sp/>1,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42" refid="address_8h_1a06fc87d81c62e9abb8790b6e5713c55ba6c1837afa356a983f188e35911dc0d84" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="address_8h_1a06fc87d81c62e9abb8790b6e5713c55ba6c1837afa356a983f188e35911dc0d84" kindref="member">AVAHI_PROTO_UNSPEC</ref><sp/>=<sp/>-1<sp/><sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal">};</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="47" refid="address_8h_1adf764cbdea00d65edcd07bb9953ad2b7a9cefc02b2cc49f5a4c8effb3f610cca6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="address_8h_1adf764cbdea00d65edcd07bb9953ad2b7a9cefc02b2cc49f5a4c8effb3f610cca6" kindref="member">AVAHI_IF_UNSPEC</ref><sp/>=<sp/>-1<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48"><highlight class="normal">};</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="address_8h_1a30245a7d8dabf1e655e0282e5d427dac" refkind="member"><highlight class="preprocessor">#define<sp/>AVAHI_ADDRESS_STR_MAX<sp/>40<sp/></highlight><highlight class="comment">/*<sp/>IPv6<sp/>Max<sp/>=<sp/>4*8<sp/>+<sp/>7<sp/>+<sp/>1<sp/>for<sp/>NUL<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="address_8h_1afb6cc0560bd01e8eb9bce3622536ef4b" refkind="member"><highlight class="preprocessor">#define<sp/>AVAHI_IF_VALID(ifindex)<sp/>(((ifindex)<sp/>&gt;=<sp/>0)<sp/>||<sp/>((ifindex)<sp/>==<sp/>AVAHI_IF_UNSPEC))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="address_8h_1abac21482950f1f3098af40ce04bf4e30" refkind="member"><highlight class="preprocessor">#define<sp/>AVAHI_PROTO_VALID(protocol)<sp/>(((protocol)<sp/>==<sp/>AVAHI_PROTO_INET)<sp/>||<sp/>((protocol)<sp/>==<sp/>AVAHI_PROTO_INET6)<sp/>||<sp/>((protocol)<sp/>==<sp/>AVAHI_PROTO_UNSPEC))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="struct_avahi_i_pv4_address" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_avahi_i_pv4_address" kindref="compound">AvahiIPv4Address</ref><sp/>{</highlight></codeline>
<codeline lineno="61" refid="struct_avahi_i_pv4_address_1a3befb53ec1c862ec6f815608dad6946a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_avahi_i_pv4_address_1a3befb53ec1c862ec6f815608dad6946a" kindref="member">address</ref>;<sp/></highlight></codeline>
<codeline lineno="62"><highlight class="normal">}<sp/><ref refid="address_8h_1a242754110a2e32511f557e4eec616a41" kindref="member">AvahiIPv4Address</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="struct_avahi_i_pv6_address" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_avahi_i_pv6_address" kindref="compound">AvahiIPv6Address</ref><sp/>{</highlight></codeline>
<codeline lineno="66" refid="struct_avahi_i_pv6_address_1a9889446ee3d4a2bccf929b97a433a91d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_avahi_i_pv4_address_1a3befb53ec1c862ec6f815608dad6946a" kindref="member">address</ref>[16];<sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal">}<sp/><ref refid="address_8h_1a3d03a955583d839cce86e70b29e3568d" kindref="member">AvahiIPv6Address</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="struct_avahi_address" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_avahi_address" kindref="compound">AvahiAddress</ref><sp/>{</highlight></codeline>
<codeline lineno="71" refid="struct_avahi_address_1adf7f95b8c2b57f25d876a99825dd2dbe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="address_8h_1a5342ada86ff1566a7fc6e855b3d46c3d" kindref="member">AvahiProtocol</ref><sp/><ref refid="struct_avahi_address_1adf7f95b8c2b57f25d876a99825dd2dbe" kindref="member">proto</ref>;<sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="74" refid="struct_avahi_address_1a49a7f521c465d29a2f21c3fda98665ca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_avahi_i_pv6_address" kindref="compound">AvahiIPv6Address</ref><sp/><ref refid="struct_avahi_address_1a49a7f521c465d29a2f21c3fda98665ca" kindref="member">ipv6</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="75" refid="struct_avahi_address_1aefb7bd89ec97bd6b353cf504cf097f74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_avahi_i_pv4_address" kindref="compound">AvahiIPv4Address</ref><sp/><ref refid="struct_avahi_address_1aefb7bd89ec97bd6b353cf504cf097f74" kindref="member">ipv4</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="76" refid="struct_avahi_address_1a90ae7878c92e60a81a327c36abdd3124" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>data[1];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>data;</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}<sp/><ref refid="address_8h_1a4797171b7d528538456fa3c68ebd430d" kindref="member">AvahiAddress</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="address_8h_1a27ce538894132c87a7d4e4b6c4608275" kindref="member">avahi_address_cmp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_avahi_address" kindref="compound">AvahiAddress</ref><sp/>*a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_avahi_address" kindref="compound">AvahiAddress</ref><sp/>*b);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="address_8h_1adb9715709be6f8ef6a09899d17664185" kindref="member">avahi_address_snprint</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ret_s,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_avahi_address" kindref="compound">AvahiAddress</ref><sp/>*a);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><ref refid="struct_avahi_address" kindref="compound">AvahiAddress</ref><sp/>*<ref refid="address_8h_1a15ffb3f79239778d525f0f22b1cc0a75" kindref="member">avahi_address_parse</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s,<sp/><ref refid="address_8h_1a5342ada86ff1566a7fc6e855b3d46c3d" kindref="member">AvahiProtocol</ref><sp/>af,<sp/><ref refid="struct_avahi_address" kindref="compound">AvahiAddress</ref><sp/>*ret_addr);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>avahi_reverse_lookup_name(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_avahi_address" kindref="compound">AvahiAddress</ref><sp/>*a,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ret_s,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length);</highlight></codeline>
<codeline lineno="107"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="address_8h_1a82b828e82335edbfeff2dc15a85dc262" kindref="member">avahi_proto_to_af</ref>(<ref refid="address_8h_1a5342ada86ff1566a7fc6e855b3d46c3d" kindref="member">AvahiProtocol</ref><sp/>proto);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><ref refid="address_8h_1a5342ada86ff1566a7fc6e855b3d46c3d" kindref="member">AvahiProtocol</ref><sp/><ref refid="address_8h_1a46ba7321e7db12be8afc1d09ecf1ec93" kindref="member">avahi_af_to_proto</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>af);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="address_8h_1aa1d93d520cf16b13e087d92fd1f4d596" kindref="member">avahi_proto_to_string</ref>(<ref refid="address_8h_1a5342ada86ff1566a7fc6e855b3d46c3d" kindref="member">AvahiProtocol</ref><sp/>proto);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal">AVAHI_C_DECL_END</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="avahi-common/address.h"/>
  </compounddef>
</doxygen>
