<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="glib-malloc_8h" kind="file" language="C++">
    <compoundname>glib-malloc.h</compoundname>
    <includes local="no">glib.h</includes>
    <includes local="no">avahi-common/cdecl.h</includes>
    <includes refid="malloc_8h" local="no">avahi-common/malloc.h</includes>
    <incdepgraph>
      <node id="151">
        <label>stdarg.h</label>
      </node>
      <node id="153">
        <label>assert.h</label>
      </node>
      <node id="149">
        <label>avahi-common/malloc.h</label>
        <link refid="malloc_8h"/>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
      </node>
      <node id="148">
        <label>avahi-common/cdecl.h</label>
      </node>
      <node id="154">
        <label>avahi-common/gccmacro.h</label>
      </node>
      <node id="152">
        <label>limits.h</label>
      </node>
      <node id="150">
        <label>sys/types.h</label>
      </node>
      <node id="146">
        <label>avahi-glib/glib-malloc.h</label>
        <link refid="glib-malloc_8h"/>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
      </node>
      <node id="147">
        <label>glib.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="glib-malloc_8h_1ac38f00910c8f2827f72ac9dcb4d9f57f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="struct_avahi_allocator" kindref="compound">AvahiAllocator</ref> *</type>
        <definition>const AvahiAllocator* avahi_glib_allocator</definition>
        <argsstring>(void)</argsstring>
        <name>avahi_glib_allocator</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return a pointer to a memory allocator that uses GLib&apos;s g_malloc() and friends. </para>        </briefdescription>
        <detaileddescription>
<para>The returned structure is statically allocated, and needs not to be copied or freed. Pass this directly to <ref refid="malloc_8h_1accd9f7a4ce488082ff2681c381f7d035" kindref="member">avahi_set_allocator()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="avahi-glib/glib-malloc.h" line="35" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>GLib&apos;s memory allocator for Avahi. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>fooglibmallochfoo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>fooglibmallochfoo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/***</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>avahi.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>avahi<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>as</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2.1<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/>avahi<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/>but<sp/>WITHOUT</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of<sp/>MERCHANTABILITY</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/>See<sp/>the<sp/>GNU<sp/>Lesser<sp/>General</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"></highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/>License<sp/>along<sp/>with<sp/>avahi;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place,<sp/>Suite<sp/>330,<sp/>Boston,<sp/>MA<sp/>02111-1307</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/>USA.</highlight></codeline>
<codeline lineno="21"><highlight class="comment">***/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor">#include<sp/>&lt;glib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;avahi-common/cdecl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="malloc_8h" kindref="compound">avahi-common/malloc.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal">AVAHI_C_DECL_BEGIN</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_avahi_allocator" kindref="compound">AvahiAllocator</ref><sp/>*<sp/><ref refid="glib-malloc_8h_1ac38f00910c8f2827f72ac9dcb4d9f57f" kindref="member">avahi_glib_allocator</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">AVAHI_C_DECL_END</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="avahi-glib/glib-malloc.h"/>
  </compounddef>
</doxygen>
